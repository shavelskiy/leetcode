<?php

declare(strict_types=1);

namespace App\Tests;

use App\Tasks\Group100\Task36;
use PHPUnit\Framework\TestCase;

final class Task36Test extends TestCase
{
    public function test36(): void
    {
        $sut = new Task36();

        $board = [['3', '.', '.', '.', '.', '4', '.', '.', '.'], ['.', '.', '.', '.', '1', '.', '8', '.', '.'], ['.', '7', '2', '.', '.', '.', '.', '.', '.'], ['.', '.', '5', '.', '.', '.', '.', '.', '.'], ['.', '4', '.', '.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.', '3', '.', '.'], ['.', '.', '.', '.', '.', '.', '.', '.', '1'], ['1', '3', '.', '.', '.', '5', '.', '.', '.'], ['.', '.', '.', '.', '5', '.', '.', '2', '.']];

        self::assertSame($sut->isValidSudoku($board), false);

        $board = [['.', '.', '.', '.', '5', '.', '.', '1', '.'], ['.', '4', '.', '3', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '3', '.', '.', '1'], ['8', '.', '.', '.', '.', '.', '.', '2', '.'], ['.', '.', '2', '.', '7', '.', '.', '.', '.'], ['.', '1', '5', '.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '2', '.', '.', '.'], ['.', '2', '.', '9', '.', '.', '.', '.', '.'], ['.', '.', '4', '.', '.', '.', '.', '.', '.']];

        self::assertSame($sut->isValidSudoku($board), false);

        $board = [['5', '3', '.', '.', '7', '.', '.', '.', '.'], ['6', '.', '.', '1', '9', '5', '.', '.', '.'], ['.', '9', '8', '.', '.', '.', '.', '6', '.'], ['8', '.', '.', '.', '6', '.', '.', '.', '3'], ['4', '.', '.', '8', '.', '3', '.', '.', '1'], ['7', '.', '.', '.', '2', '.', '.', '.', '6'], ['.', '6', '.', '.', '.', '.', '2', '8', '.'], ['.', '.', '.', '4', '1', '9', '.', '.', '5'], ['.', '.', '.', '.', '8', '.', '.', '7', '9']];

        self::assertSame($sut->isValidSudoku($board), true);

        $board = [['8', '3', '.', '.', '7', '.', '.', '.', '.'], ['6', '.', '.', '1', '9', '5', '.', '.', '.'], ['.', '9', '8', '.', '.', '.', '.', '6', '.'], ['8', '.', '.', '.', '6', '.', '.', '.', '3'], ['4', '.', '.', '8', '.', '3', '.', '.', '1'], ['7', '.', '.', '.', '2', '.', '.', '.', '6'], ['.', '6', '.', '.', '.', '.', '2', '8', '.'], ['.', '.', '.', '4', '1', '9', '.', '.', '5'], ['.', '.', '.', '.', '8', '.', '.', '7', '9']];

        self::assertSame($sut->isValidSudoku($board), false);
    }
}
